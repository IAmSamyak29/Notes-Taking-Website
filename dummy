import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.File;
import java.io.IOException;

import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Service;

@Service
public class JsonSearchService {
    
    public String searchAttribute(String attributeName) throws IOException {
        // read JSON file into a JsonNode object
        Resource resource = new ClassPathResource("path/to/json/file.json");
        ObjectMapper mapper = new ObjectMapper();
        JsonNode root = mapper.readTree(resource.getInputStream());

        // search for attribute in the JSON object recursively
        return searchJsonNode(root, attributeName);
    }

    private String searchJsonNode(JsonNode node, String attributeName) {
        if (node.isObject()) {
            if (node.has(attributeName)) {
                return node.get(attributeName).asText();
            } else {
                for (JsonNode childNode : node) {
                    String result = searchJsonNode(childNode, attributeName);
                    if (result != null) {
                        return result;
                    }
                }
            }
        } else if (node.isArray()) {
            for (JsonNode arrayElement : node) {
                String result = searchJsonNode(arrayElement, attributeName);
                if (result != null) {
                    return result;
                }
            }
        }
        return null;
    }
}











//method 2
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.io.InputStream;

@Service
public class JsonSearchService {

    private final Resource jsonResource;

    public JsonSearchService(Resource jsonResource) {
        this.jsonResource = jsonResource;
    }

    public String searchJsonAttribute(String attributeName) throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        InputStream inputStream = jsonResource.getInputStream();
        JsonNode rootNode = objectMapper.readTree(inputStream);
        return searchNode(rootNode, attributeName);
    }

    private String searchNode(JsonNode node, String attributeName) {
        if (node.isObject()) {
            for (String fieldName : node.fieldNames()) {
                JsonNode fieldValue = node.get(fieldName);
                if (fieldName.equals(attributeName)) {
                    return fieldValue.asText();
                } else {
                    String result = searchNode(fieldValue, attributeName);
                    if (result != null) {
                        return result;
                    }
                }
            }
        } else if (node.isArray()) {
            for (JsonNode arrayElement : node) {
                String result = searchNode(arrayElement, attributeName);
                if (result != null) {
                    return result;
                }
            }
        }
        return null;
    }
}
